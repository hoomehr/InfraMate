name: Infra Visualization

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Target repository to visualize'
        required: true
        default: '.'
      target_branch:
        description: 'Branch to visualize'
        required: true
        default: 'main'

jobs:
  visualize-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Inframate
        uses: actions/checkout@v4
        with:
          path: inframate
          
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.target_repo }}
          ref: ${{ github.event.inputs.target_branch }}
          path: target_repo

      - name: Find Terraform files
        id: find_tf
        run: |
          cd target_repo
          echo "Scanning for Terraform files..."
          TF_FILES=$(find . -name "*.tf" | sort)
          
          if [ -z "$TF_FILES" ]; then
            echo "No Terraform files found in the repository."
            echo "tf_found=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Found Terraform files:"
            echo "$TF_FILES"
            echo "tf_found=true" >> $GITHUB_OUTPUT
            
            # Find the main Terraform directory
            MAIN_TF_DIR=$(dirname $(find . -name "*.tf" | sort) | sort | uniq -c | sort -nr | head -1 | awk '{print $2}')
            echo "main_tf_dir=$MAIN_TF_DIR" >> $GITHUB_OUTPUT
          fi

      - name: Set up Terraform visualization tools
        if: steps.find_tf.outputs.tf_found == 'true'
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y graphviz python3-pip

          # Install Terraform
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y terraform

          # Install Python dependencies
          pip install pydot networkx matplotlib
          
          # Create visualization directory
          mkdir -p visualizations

      - name: Create scripts directory
        if: steps.find_tf.outputs.tf_found == 'true'
        run: |
          mkdir -p scripts
          cp -r inframate/scripts/visualization/* scripts/

      - name: Generate Infrastructure Visualization
        if: steps.find_tf.outputs.tf_found == 'true'
        run: |
          cd target_repo
          # Access the output variable using the ${{ }} syntax - this is properly injected by GitHub Actions
          MAIN_TF_DIR="${{ steps.find_tf.outputs.main_tf_dir }}"
          
          # If main_tf_dir is empty, default to the current directory
          if [ -z "$MAIN_TF_DIR" ]; then
            MAIN_TF_DIR="."
          fi
          
          # Ensure the directory exists
          if [ ! -d "$MAIN_TF_DIR" ]; then
            echo "Error: Directory $MAIN_TF_DIR does not exist"
            exit 1
          fi
          
          echo "Generating infrastructure visualization from $MAIN_TF_DIR"
          mkdir -p visualizations
          
          # Run the visualization script
          python3 ../scripts/tf_visualizer.py "$MAIN_TF_DIR" "visualizations"
          
          # Create markdown with diagrams
          echo "# Infrastructure Visualization" > visualizations/README.md
          echo "" >> visualizations/README.md
          echo "## Overview" >> visualizations/README.md
          echo "" >> visualizations/README.md
          echo "This visualization shows the AWS infrastructure defined in the Terraform files." >> visualizations/README.md
          echo "" >> visualizations/README.md
          
          # Add infrastructure diagram if it exists
          if [ -f "visualizations/infrastructure-diagram.png" ]; then
            echo "## Infrastructure Diagram" >> visualizations/README.md
            echo "" >> visualizations/README.md
            echo "![Infrastructure Diagram](infrastructure-diagram.png)" >> visualizations/README.md
            echo "" >> visualizations/README.md
          fi
          
          # Add resource summary if it exists
          if [ -f "visualizations/resource-summary.png" ]; then
            echo "## Resource Summary" >> visualizations/README.md
            echo "" >> visualizations/README.md
            echo "![Resource Summary](resource-summary.png)" >> visualizations/README.md
            echo "" >> visualizations/README.md
          fi
          
          # Include resource summary table if available
          if [ -f "visualizations/resource-summary.md" ]; then
            cat visualizations/resource-summary.md >> visualizations/README.md
          fi
          
          echo "Visualization complete. Files available in visualizations directory."

      - name: Create Pull Request
        if: steps.find_tf.outputs.tf_found == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.REPO_PAT }}
          path: target_repo
          commit-message: "Add Infrastructure Visualization"
          title: "ðŸ“Š Infrastructure Visualization"
          body: |
            # ðŸ“Š Infrastructure Visualization
            
            This PR adds visualizations of your AWS infrastructure defined in Terraform files.
            
            ## What's included
            - Infrastructure diagram showing resources and their relationships
            - Summary of AWS resources used in your Terraform code
            - Visual representation of your cloud architecture
            
            These visualizations help with:
            - Understanding the overall architecture
            - Identifying resource dependencies
            - Documenting your infrastructure
            - Communicating the design to team members
            
            The visualizations are available in the `visualizations` directory.
          branch: "inframate/infra-visualization"
          base: ${{ github.event.inputs.target_branch }}
      
      - name: Upload Visualizations
        if: steps.find_tf.outputs.tf_found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: infrastructure-visualizations
          path: target_repo/visualizations
          retention-days: 7 